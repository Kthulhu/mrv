

# VARIABLE DEFAULTS
#####################
# can be overridden on the commandline
maya_versions := 8.5 2008 2009
TARGET_BRANCH ?=
SOURCE_REVSPEC ?=
MAYA_VERSION ?= 8.5
PRECOMPILE ?= 2 # if 1, files will be precompiled, otherwise they will be released as source, if 2 they will be optimized
PYFILES ?= $(shell find . -name "*.py" -not -wholename "*/.*")
VPATH ?= $(shell find . -type d -not -wholename "*/.*")
GITROOT=.git
TESTRESULTLOGBASE ?= testresult
DOCINDEX ?= doc/build/html/index.html

# shell script launching all tests based on NOSE_TEST_EXECUTABLE, hence it must support to given flags
NOSE_TEST_EXECUTABLE ?= test/bin/tmrv

# shell script making a release, will be given following parameters:
# source_revspec, target_branch, maya_version, precompile, for more information see 
# build/releaselib.sh:makeRelease
MAKE_RELEASE_EXECUTABLE ?= build/releaselib.sh call makeRelease

# function used to add files to the release branch - defaults to something useful if not set
RELEASE_ADD_FILE_FUNC ?=


# declare phony targets, release tags are defined procedurally
release_targets := $(foreach version,$(maya_versions), release$(version))
.PHONY: releases checkreleaseargs gitroot default clean test $(release_targets) docs
.DEFAULT_GOAL:=default 


#########################      ######################################
# RULES ##################   #######################################
###################################################################


# DEFAULT
# Abort printing usage information
default: 
	@echo "make SOURCE_REVSPEC=name TARGET_BRANCH=name releases"
	@echo "Use calling convention above to make a release of the given SOURCE_REVSPEC to create or update the given target branch"
	false

# =======================================
# CHECKARGS ===================================================
# allows to check command line required to make a release ====
# ============================================================
checkargs:
ifndef SOURCE_REVSPEC
	@echo "SOURCE_REVSPEC is not defined - please specify SOURCE_REVSPEC=branch on the commandline"
	@echo "The SOURCE_REVSPEC has to be given for safety reasons"
	false
endif
ifndef TARGET_BRANCH
	@echo "TARGET_BRANCH is not defined - please specify TARGET_BRANCH=branch on the commandline"
	@echo "The SOURCE_REVSPEC has to be given for safety reasons"
	false
endif
# ------------------------------------------ #

# GIT ROOT PREREQUESITE
# abort if we are not in the root of the repostiry
$(GITROOT):
	@echo "Need to be in the root level of the git repository - it contains the .git subdirectory"


# simple remapping
docs : $(DOCINDEX)

# DYNAMIC RELEASE TEMPLATE
############################
# To provide individual targets for different versions
define release_template
test$(1) : $(TESTRESULTLOGBASE).$(1).log

release$(1) : MAYA_VERSION=$(1)
release$(1) : checkargs $(GITROOT) test$(1) docs
	$(MAKE_RELEASE_EXECUTABLE) $$(SOURCE_REVSPEC) $$(TARGET_BRANCH) $$(MAYA_VERSION) $$(PRECOMPILE) $$(RELEASE_ADD_FILE_FUNC)
endef

$(foreach version, $(maya_versions), $(eval $(call release_template,$(version)) ) )


# DOCS
########
# Make documenation
$(DOCINDEX) : $(PYFILES)
	make --directory doc rebuild 

# RELEASE 
##########
# Make a full release for all maya versions
releases : $(release_targets)
# Checkout the 


# TEST
########
# Run unit tests
$(TESTRESULTLOGBASE).%.log : $(PYFILES) 
	$(NOSE_TEST_EXECUTABLE) $(MAYA_VERSION) --exe -v > $(TESTRESULTLOGBASE).$(MAYA_VERSION).log


# CLEAN
########
clean :
	-make --directory doc clean
	-rm $(TESTRESULTLOGBASE).*
	-find . \( -name "*.pyc" -or -name "*.pyo" \) -exec rm {} +
	
	