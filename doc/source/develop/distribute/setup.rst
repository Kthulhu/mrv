
.. _setup-label:

################
The Setup Script
################
``setup.py`` is the default name for the `distutils`_ compatible script which drives the distribution and installation process. Python comes with a selection of setup-subcommands which may be configured independently.

MRV has re-implemented parts of the distutils to integrate unit testing, documentation generation and git into the distribution process.

In the following, a complete list of overridden or newly added subcommands will be presented including a detailed description of their flags.

For examples of how to perform common tasks, see the :doc:`workflow document <workflow>`.

********
Commands
********
MRV's distribution system consists of setup subcommands which are partially overriding default ones, or which are new and specific to MRV. The latter ones are marked with *- new -*.

As some commands share the same set of flags, these flag-sets are combined in so called `Command Bases`_.

Comand flags are given in the form:

 **--long-name** (*-s*)

to indicate their long and short names. If the flag takes arguments, it is indicated by '=':

 **--flag-with-argument=VALUE** (*-f*)
 
The type of the *VALUE* is usually documented specifically.

=================
docdist *- new -*
=================
The ``docdist`` command allows to build documentation using :doc:`makedoc <docs>`, which needs to be pointed at by the :doc:`info module <pinfo>`.

You have the option to create and possibly reuse docs in your main repository, or documentation as build directly in your build or source distribution output directory.

The build of the documentation is skipped if the last build version matches the currently set version. The version of the individual documentation parts is indicated by the *.version_info files in the *doc* directory.

The documentation output can be put into a zip-archive or into a git repository using the `Git SubCommand`_.

* **--zip-archive** (*-z*)

 - If set, a zip archive containing all generated documentation, including the *index.html*, will be put into your distribution folder, usually ``dist``.

* **--from-build-version** (*-b*)

 - If set, the documentation will be built in the output as generated by **build_py** ( invoked by **build**) or **sdist**.
 - Should be used your build or sdist output differs from your actual project contents, for example if you only distribute a subset of your modules. If this is not the case, its recommended not to set this flag as you can reuse documentation you might have already build for your currently set project version.


*************
Command Bases
*************

==============
Git SubCommand
==============


Flags: TODO: exclude_items: applies to packages, modules and package_data, whereas the '!something' exclusion syntax in package_data definition prevents copying of data only, done on distribution level, but used by subcommands


.. _distutils: http://docs.python.org/distutils
