#!/bin/bash
if [[ $1 == *help* || $1 == "-h" ]] ;
then
cat <<HELP
bpython [mayaversion]
starts a python interpreter using the optionally given maya version
where maya version is either 8.5 or 2008 or 2009
HELP
exit 1
fi

# get maya version
mayaversiondefault=8.5
mayaversion=${1:-$mayaversiondefaul}
if [[ ! $mayaversion == 8.5 && ! $mayaversion == 20?? ]]; then
	# conosider id an argument and keep it
	mayaversion=$mayaversiondefault
fi

# get rid of our parameter
if [[ $1 == $mayaversion ]]; then shift ; fi

# determine the basepath to maya
uname=`uname`
if [[ $uname == "Darwin" ]]; then
	mayaroot=/Applications/Autodesk/maya
	pylibdir=Frameworks/Python.framework/Versions/Current/lib

elif [[ $uname == "Linux" ]]; then
	mayaroot=/usr/autodesk/maya
	pylibdir=lib
	# determine bits in os
	if [ -e /lib64 ]; then osbits=-x64; fi
fi


if [[ ! $mayaroot ]]; then
	echo Could not determine maya location - cannot handle operating system
	exit 2
fi

# determine python version
for pyversion in 8.52.4 20082.5 20092.6 ; do
	if [[ $pyversion == ${mayaversion}* ]]; then
		python_version=${pyversion/$mayaversion/}
		break
	fi
done

test=${python_version:?Python version could not be determined for maya version $mayaversion}


# LD LIBARRY CONFIGURAION
if [[ $uname == "Linux" ]]; then
	LD_PRELOAD="/usr/lib64/libstdc++.so.6:/usr/lib/gcc/x86_64-linux-gnu/4.2/libgcc_s.so"
	export LD_PRELOAD LD_LIBRARY_PATH
elif [[ $uname == "Darwin" ]]; then

	# assure we get the default osx interpreter first - otherwise we might get a version mismatch
	export PATH=/usr/bin:$PATH
fi

# set the python path to find out package
base=`/usr/bin/dirname $0`
byronimobase=$base/../py
export PYTHONPATH=$PYTHONPATH:$byronimobase


# execute the interpreter
# TODO: parse an optional option to specify the python version or just the maya version
/usr/bin/env python$python_version $@
